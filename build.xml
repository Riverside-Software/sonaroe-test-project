<?xml version="1.0" encoding="utf-8"?>

<!-- How to execute : ant -lib ..\..\pct\dist\PCT.jar -DDLC=%DLC% -lib %USERPROFILE%\.m2\repository\com\google\guava\guava\10.0.1\guava-10.0.1.jar -lib %USERPROFILE%\.m2\repository\org\antlr\antlr4-runtime\4.5\antlr4-runtime-4.5.jar clean build -->
<project name="TEST" default="build">
  <taskdef resource="PCT.properties" />

  <!-- Default values for local development instance of SonarQube -->
  <property name="SONAR_URL" value="http://localhost:9000" />
  
  <target name="init">
    <mkdir dir="db" />
    <mkdir dir="srcDbg" />
    <mkdir dir="build" />
    <mkdir dir="buildDbg" />
    <mkdir dir="profiler" />
    <mkdir dir="dump" />
    <PCTVersion />
    <ProgressVersion dlcHome="${DLC}" fullVersion="dlc.version.full" />
    <echo message="${dlc.version.full}" />
  </target>

  <target name="clean">
    <delete dir="db" />
    <delete dir="srcDbg" />
    <delete dir="build" />
    <delete dir="buildDbg" />
    <delete dir="profiler" />
    <delete dir="dump" />
  </target>

  <target name="db" depends="init">
    <sports2000 destDir="db" dbName="sp2k" dlcHome="${DLC}" />
    <PCTDumpSchema destFile="dump/sp2k.df" dlcHome="${DLC}">
      <PCTConnection dbName="sp2k" dbDir="db" singleUser="true" />
    </PCTDumpSchema>
    <echo file="dump/empty.df" />
  </target>

  <target name="build" depends="db">
    <!-- First pass : standard build and debug listing files generation -->
    <PCTCompile destdir="build" dlcHome="${DLC}" cpinternal="utf-8" cpstream="utf-8" listing="true" debugListing="true" flattenDebugListing="false" relativePaths="true" xmlXref="true" keepXref="true">
      <fileset dir="src/classes" includes="**/*.cls" />
      <fileset dir="src/procedures" includes="**/*.p" />
      <propath>
        <pathelement location="src/classes" />
        <pathelement location="src/procedures" />
      </propath>
      <PCTConnection dbName="sp2k" dbDir="db" singleUser="true" logicalName="abc">
        <Alias name="sp2k" />
        <Alias name="foobar" />
      </PCTConnection>
    </PCTCompile>
    <!-- Strip line numbers from debug listing files -->
    <copy toDir="srcDbg">
      <fileset dir="build/.dbg" />
      <filterchain>
        <filterreader classname="com.phenix.pct.DebugListingFilterReader" />
      </filterchain>
    </copy>
    <!-- Then build debug listing files -->
    <PCTCompile destdir="buildDbg" dlcHome="${DLC}" cpinternal="utf-8" cpstream="utf-8" listing="true" xmlXref="true" keepXref="true" relativePaths="true" failOnError="false">
      <fileset dir="srcDbg" />
      <propath>
        <pathelement location="srcDbg" />
      </propath>
      <PCTConnection dbName="sp2k" dbDir="db" singleUser="true" logicalName="abc">
        <PCTAlias name="sp2k" />
        <PCTAlias name="foobar" />
      </PCTConnection>
    </PCTCompile>

    <!-- Unit tests -->
    <PCTRun procedure="sample/test5.p" dlcHome="${DLC}">
      <propath location="build" />
      <Profiler enabled="true" outputFile="profiler/profiler1.txt" coverage="true" />
      <PCTConnection dbName="sp2k" dbDir="db" singleUser="true" logicalName="abc">
        <PCTAlias name="sp2k" />
        <PCTAlias name="foobar" />
      </PCTConnection>
    </PCTRun>
    <PCTRun procedure="sample/test6.p" dlcHome="${DLC}">
      <propath location="build" />
      <Profiler enabled="true" outputFile="profiler/profiler2.txt" coverage="true" />
      <PCTConnection dbName="sp2k" dbDir="db" singleUser="true" logicalName="abc">
        <PCTAlias name="sp2k" />
        <PCTAlias name="foobar" />
      </PCTConnection>
    </PCTRun>
    <!-- Generate generic coverage report -->
    <GenericCoverage destFile="profiler/profiler.xml">
      <fileset dir="profiler" includes="*.txt" />
      <propath>
        <pathelement location="srcDbg" />
      </propath>
    </GenericCoverage>
  </target>

  <target name="dist">
    <mkdir dir="dist" />
    <copy todir="dist">
      <fileset dir="build" includes="**/*.r" />
      <fileset dir="build/.dbg" includes="*.w,*.p,*.cls" />
    </copy>
  </target>

  <target name="lint">
    <Prolint lintFile="lint.xml">
      <fileset dir="src/classes" includes="**/*.cls" />
      <fileset dir="src/procedures" includes="**/*.p" />
      <propath>
        <pathelement location="src/classes" />
        <pathelement location="src/procedures" />
      </propath>
      <DBConnection dbName="sp2k" dbDir="db" singleUser="true" />
    </Prolint>
  </target>

  <target name="sonar" depends="build">
    <java classname="org.sonarsource.scanner.cli.Main" fork="true" failOnError="true">
      <jvmarg value="-Drunner.home=." />
      <jvmarg value="-Dproject.home=." />
      <jvmarg value="-Dproject.settings=sonar-project1.properties" />
      <jvmarg value="-Dsonar.projectVersion=${BUILD_ID}" />
      <jvmarg value="-Dsonar.verbose=false" />
      <jvmarg value="-Dsonar.host.url=${SONAR_URL}" />
      <jvmarg value="-Dsonar.oe.dlc=${DLC}" />
      <classpath location="sonar-scanner-cli-2.5.1.jar" />
      <!-- <arg line="-X" /> -->
    </java>
    <java classname="org.sonarsource.scanner.cli.Main" fork="true" failOnError="true">
      <jvmarg value="-Drunner.home=." />
      <jvmarg value="-Dproject.home=." />
      <jvmarg value="-Dproject.settings=sonar-project2.properties" />
      <jvmarg value="-Dsonar.projectVersion=${BUILD_ID}" />
      <jvmarg value="-Dsonar.verbose=false" />
      <jvmarg value="-Dsonar.host.url=${SONAR_URL}" />
      <jvmarg value="-Dsonar.oe.dlc=${DLC}" />
      <classpath location="sonar-scanner-cli-2.5.1.jar" />
      <!-- <arg line="-X" /> -->
    </java>
  </target>

</project>
